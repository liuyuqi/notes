Description:

Reverse bits of a given 32 bits unsigned integer.

For example, given input 43261596 (represented in binary as 00000010100101000001111010011100), return 964176192 (represented in binary as 00111001011110000010100101000000).

Follow up:
If this function is called many times, how would you optimize it?

Related problem: Reverse Integer

===========================
Code (C):
----------------------
uint32_t reverseBits(uint32_t n) {
    uint32_t result = 0, temp, helper = 1;
    int i;
    for (i = 0; i < 32; i++) {
        temp = (n >> i) & helper;
        result = result << 1;
        if (temp != 0) {
            result += 1;
        }
    }
    
    return result;
}
